▶ Persistence (영속성)
	데이터를 영구적으로 저장하고 필요할 때 다시 검색해서 사용할 수 있는 것을 의미.
	애플리케이션을 개발 할 때에 데이터베이스와 같은 영속성 저장소에 데이터를 저장하고 관리한다.

▶ Persistence Framework
	데이터의 영속성을 관리하고 데이터베이스와의 상호작용을 쉽게 만들어주는 도구.
	개발자는 복잡한 데이터베이스 연산을 추상화하고 코드의 유지보수성을 높일 수 있다.
	대표적인 친구들로는 JPA, Hibernate, MyBatis 가 있다. 

▶ MyBatis
	소스코드 안에 SQL문을 작성하면 코드가 길어지고 섞여 있어서 유지보수 및 분업이 쉽지 않다.
	MyBatis는 기존 JDBC 방식과는 달리 SQL 쿼리를 XML 파일에 직접 작성하고 매핑하여
	Java 객체와 데이터베이스 간의 변환을 쉽게 해준다.

	특징)
	- 개발자가 직접 SQL을 작성한다. (고도의 최적화 쿼리 작성 가능) [JPA, Hibernate 와 비교했을 때]
	- 동적 SQL 지원 (if, choose, set, where 등과 같은 태그 사용)
	- 자동 매핑 (SQL의 결과를 Java 객체로 자동 매핑)
	- SQL을 분리하여 관리하기에 유지보수성이 높다.

▷ 동적 쿼리
	특정 상황에 따라 SQL을 동적으로 만드는 것.

▶ <if test="">
	test 속성을 만족하면 태그 안 내용을 쿼리에 추가한다.

▶ <choose> - <when> - <otherwise>
	if - else if - else 라고 생각하면 된다.

▶ <where>
	조건절을 만들 때 사용한다.
	하위 요소에서 내용이 생성될 때만 where 이 생긴다.

▶ <set>
	update 문장에서 null 여부에 따라 동적으로 쿼리를 만든다.